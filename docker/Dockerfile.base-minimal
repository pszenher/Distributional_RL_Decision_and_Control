FROM ros:jazzy AS ros-jazzy-base

RUN echo 'APT::Install-Recommends "false";' > "/etc/apt/apt.conf.d/90-docker-no-recommends" \
    && \
    echo 'APT::Install-Suggests "false";'   > "/etc/apt/apt.conf.d/90-docker-no-suggests"

FROM ros-jazzy-base AS ros-jazzy-packagexml

COPY docker/collect_package_xml_aux.bash /tmp/collect_package_xml_aux.bash

RUN --mount=type=bind,src=.,dst=/ws/src,relabel=shared,ro \
    /tmp/collect_package_xml_aux.bash /ws/src /tmp/package_xml_cache

FROM ros-jazzy-base AS builder


RUN --mount=type=bind,from=ros-jazzy-packagexml,src=/tmp/package_xml_cache,dst=/ws/src \
    . /opt/ros/${ROS_DISTRO}/setup.sh \
    && apt update \
    && rosdep install -r \
      --from-paths /ws/src/ \
      --ignore-src \
      --rosdistro ${ROS_DISTRO} -y

COPY . /ws/src/

# Prefetch Gazebo fuel resources into cache
# 
# FIXME: this is a blind xpath query to grab `//include/uri` nodes
#        with "http" in them somewhere; there could still be fuel
#        resources that need to be fetched from imports found in the
#        SDF trees of locally-imported models.
#
#        The best way to account for this isn't clear; if gz sim has a
#        set of flags that do only the startup phase for a world file
#        w/o graphics, it might be worth letting Gazebo fetch the
#        assets for us that way.  
# 
# RUN . /opt/ros/${ROS_DISTRO}/setup.sh && \
#     xmllint --xpath "//include/uri/text()" "/ws/src/virelex/worlds/sydney_regatta.sdf" \
#     | grep http \
#     | sort \
#     | uniq \
#     | xargs -t -n1 gz fuel download --url

# Build the project
RUN . /opt/ros/${ROS_DISTRO}/setup.sh \
    && cd /ws \
    && colcon build --symlink-install --merge-install

RUN echo "source /ws/install/setup.bash" >> ~/.bashrc
